name: promote

on:
  workflow_call:
    inputs:
      FROM_ENV:
        type: string
        required: true
      TO_ENV:
        type: string
        required: true
      ARTIFACT_ID:
        type: string
        required: false  # only used for dev
    secrets:
      WF_GITHUB_TOKEN:
        required: true

jobs:
  promote:
    runs-on: ubuntu-latest
    environment: ${{ inputs.TO_ENV }}

    steps:
      - name: Checkout deploy-state branch
        uses: actions/checkout@v4
        with:
            ref: deploy-state
            token: ${{ secrets.WF_GITHUB_TOKEN }}
      - name: Getting SERVICE_NAME
        id: serviceName
        run: |
          SERVICE_NAME=$(node -p -e "require('./package.json').name")
          echo "servicename=$SERVICE_NAME" >> $GITHUB_OUTPUT

      - name: Download dev artifact (if FROM_ENV is dev)
        if: ${{ inputs.FROM_ENV == 'dev' }}
        uses: actions/download-artifact@v4
        with:
          name: service-${{ steps.serviceName.outputs.servicename }}-dev-${{ inputs.ARTIFACT_ID }}
          path: dev-meta


      - name: Ensure .deploys/service.json exists
        run: |
          mkdir -p .deploys
          [ -f .deploys/service.json ] || echo '{}' > .deploys/service.json

      - name: Load promotion data
        run: |
          if [[ "${{ inputs.FROM_ENV }}" == "dev" ]]; then
            cp dev-meta/service.json from.json
          else
            jq --arg env "${{ inputs.FROM_ENV }}" '.[$env]' .deploys/service.json > from.json
          fi

          cat from.json
          DIGEST=$(jq -r '.digest' from.json)
          VERSION_TAG=$(jq -r '.version_tag' from.json)
          IMAGE_TAG=$(jq -r '.image_tag' from.json)

          if [[ -z "$DIGEST" || "$DIGEST" == "null" ]]; then
            echo "❌ Missing digest for ${{ inputs.FROM_ENV }}"
            exit 1
          fi

          jq --arg env "${{ inputs.TO_ENV }}" \
             --arg digest "$DIGEST" \
             --arg version_tag "$VERSION_TAG" \
             --arg image_tag "$IMAGE_TAG" \
             '.[$env] = {digest: $digest, version_tag: $version_tag, image_tag: $image_tag}' \
             .deploys/service.json > tmp.json && mv tmp.json .deploys/service.json

          echo "✅ Promoted ${{
            steps.serviceName.outputs.servicename
          }} from ${{ inputs.FROM_ENV }} to ${{ inputs.TO_ENV }}"

      - name: Commit and push promotion
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add .deploys/service.json
          git commit -m "chore(ci): promote ${{ steps.serviceName.outputs.servicename }} from ${{ inputs.FROM_ENV }} to ${{ inputs.TO_ENV }} [skip ci]" || echo "Nothing to commit"
          git push origin deploy-state
