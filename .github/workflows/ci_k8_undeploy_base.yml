# This is a basic workflow to help you get started with Actions
name: CI-K8-BASE-UNDEPLOY
on:
  workflow_call:
    inputs:
      WF_ENV_TYPE:
        type: string
        required: true
      WF_ENV_TYPE_DEPLOY:
        type: string
        required: true
        
    secrets:
      WF_KUBE_TYPE:
        required: true
      
      WF_AWS_ACCESS_KEY_ID:
        required: true
      WF_AWS_SECRET_ACCESS_KEY:
        required: true
      WF_AWS_REGION:
        required: true
      
      WF_GITHUB_TOKEN:
        required: true
      
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  setup:
    name: preparing
    runs-on: ubuntu-latest
    environment: ${{inputs.WF_ENV_TYPE_DEPLOY}}
    continue-on-error: false
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false
      
      - name: Checkout tools repo
        uses: actions/checkout@v4
        with:
          ref: v1.3.0
          token: ${{ secrets.WF_GITHUB_TOKEN }} 
          repository: QueroDelivery/kube
          path: .kube
          persist-credentials: false

      - name: Override kubefiles
        run: |
          FILE=setup/.kube
          if [[ -d "$FILE" ]]; then
            echo "$FILE EXIST!" 
            cp -avf setup/.kube/*.yaml .kube/
            echo "Kubefiles Override FINISHED" 
          fi

      - name: Setting SERVICE_NAME
        id: getting_serviceName
        run: |
          export SERVICE_NAME=`node -p -e "require('./package.json').name"` 
          echo SERVICE_NAME=$SERVICE_NAME >> $GITHUB_ENV
          echo $SERVICE_NAME
      - name: Setting PR_NUMBER
        id: pr_number
        run: |
          export PR_NUMBER=${{ github.event.pull_request.number }}
          echo PR_NUMBER=$PR_NUMBER >> $GITHUB_ENV
          echo $PR_NUMBER
          
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.WF_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.WF_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.WF_AWS_REGION }}
          role-session-name: ${{ secrets.WF_SERVICE_NAME }}_GitHubActions
      
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        
      - name: Setup kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/v1.21.0/bin/linux/amd64/kubectl"
          chmod u+x kubectl
          sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
          curl -o aws-iam-authenticator https://amazon-eks.s3.us-west-2.amazonaws.com/1.19.6/2021-01-05/bin/linux/amd64/aws-iam-authenticator
          chmod u+x aws-iam-authenticator

      - name: Kubernetes Undeploy
        env:
          KUBE_NAME: ${{ env.SERVICE_NAME }}-pr-${{ env.PR_NUMBER }}
          KUBECONFIG: .kube/config-${{secrets.WF_KUBE_TYPE}}.yaml
        timeout-minutes: 20
        run: |
          export PATH=$PATH:$PWD
          kubectl version --client
          kubectl version
          echo "Replacing envs from kube manifests"
          cat .kube/namespace.yaml | envsubst > namespace.yaml
          echo "Deleting namespace"
          kubectl delete -f namespace.yaml
          
