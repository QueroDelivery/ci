# This is a basic workflow to help you get started with Actions
name: CI-BASE
on:
  workflow_call:
    inputs:
      WF_NODE_VERSION:
        type: string
        required: true
      WF_NEW_CI:
        type: boolean
        required: true

    secrets:
      WF_NPM_TOKEN:
        required: true
      WF_NPM_USER:
        required: true
      WF_GITHUB_TOKEN:
        required: true
      WF_REGISTRY:
        required: true
    outputs:
      servicename:
        description: "The service name"
        value: ${{ jobs.setup.outputs.output1 }}


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  setup:
    name: preparing
    runs-on: ubuntu-latest
    continue-on-error: false
    outputs:
      output1: ${{ steps.serviceName.outputs.servicename }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ inputs.WF_NODE_VERSION }}
          cache: 'yarn'
          registry-url: ${{secrets.WF_REGISTRY}}
      - name: install packages using yarn.lock
        env:
          NODE_AUTH_TOKEN: ${{ secrets.WF_NPM_TOKEN }} 
        run: |
          yarn --frozen-lockfile

      - name: testing
        run: |
          yarn test:ci

      - name: Release
        if: ${{ inputs.WF_NEW_CI }} == true #It Must runs only once
        env:
          NPM_TOKEN: ${{ secrets.WF_NPM_TOKEN }} 
          GITHUB_TOKEN: ${{ secrets.WF_GITHUB_TOKEN }}
        run: |
          yarn release

      - name: Getting SERVICE_NAME
        id: serviceName
        run: |
          export SERVICE_NAME=`node -p -e "require('./package.json').name"`
          echo "::set-output name=servicename::$SERVICE_NAME"

