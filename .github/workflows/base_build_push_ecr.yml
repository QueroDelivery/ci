name: CI-ECR-BASE

on:
  workflow_call:
    inputs:
      WF_SERVICE_NAME:
        type: string
        required: true
      WF_ENV_TYPE:
        type: string
        required: true
      WF_ENV_TYPE_DEPLOY:
        type: string
        required: true
      WF_NODE_VERSION:
        type: string
        required: true

    secrets:
      WF_GITHUB_TOKEN:
        required: true
      WF_AWS_ACCESS_KEY_ID:
        required: true
      WF_AWS_SECRET_ACCESS_KEY:
        required: true
      WF_AWS_REGION:
        required: true

    outputs:
      servicename:
        description: "The service name"
        value: ${{ jobs.setup.outputs.servicename }}

jobs:
  setup:
    name: push-to-ecr
    runs-on: ubuntu-latest
    environment: ${{ inputs.WF_ENV_TYPE_DEPLOY }}
    outputs:
      servicename: ${{ steps.service-name.outputs.servicename }}

    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.WF_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.WF_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.WF_AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Download built image artifact
        uses: actions/download-artifact@v4
        with:
          name: built-image

      - name: Load image and push to ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: '${{ inputs.WF_SERVICE_NAME }}'
          IMAGE_TAG: latest
          VERSION_TAG: ${{ github.sha }}
        run: |
          gunzip -c image.tar.gz | docker load
          IMAGE_ID=$(docker images -q)
          
          docker tag $IMAGE_ID $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker tag $IMAGE_ID $ECR_REGISTRY/$ECR_REPOSITORY:$VERSION_TAG

          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$VERSION_TAG

          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$VERSION_TAG" >> $GITHUB_OUTPUT

      - name: Output service name
        id: service-name
        run: echo "servicename=${{ inputs.WF_SERVICE_NAME }}" >> $GITHUB_OUTPUT
